@model MovieApp.ViewModels.MovieViewModel
@{
    ViewData["Title"] = "Create Movie";
}
<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-light">
                    <h3>Create New Movie</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        @await Html.PartialAsync("_MovieForm", Model)
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        var editor = new FroalaEditor('#story', {
            imageUploadURL: '/api/images'
        });

        const imageUploadElement = document.getElementById('ImageUpload');
        const imageUrlElement = document.getElementById('ImageUrl');

        async function upload(e){
            let data = new FormData();
            data.append('file', e.target.files[0]);
            await fetch('/api/images', {
                method:'POST',
                headers:{'Accept' : '*/*'},
                body:data
            }).then(response => response.json())
            .then(result => {imageUrlElement.value = result.link;
            });
        }

        imageUploadElement.addEventListener('change', upload)

    </script>
}